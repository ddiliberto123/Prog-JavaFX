<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.text.Text?>

<BorderPane fx:id="borderPane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/20.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="orbitalcalculator.javafxtermproject.GameScreenController">
   <top>
      <MenuBar BorderPane.alignment="CENTER">
         <menus>
            <Menu mnemonicParsing="false" text="File">
               <items>
                  <MenuItem mnemonicParsing="false" text="Back" />
                  <SeparatorMenuItem mnemonicParsing="false" />
                  <MenuItem fx:id="fileClose" mnemonicParsing="false" onAction="#closeApp" text="Close" />
               </items>
            </Menu>
         </menus>
      </MenuBar>
   </top>
   <center>
      <Text strokeType="OUTSIDE" strokeWidth="0.0" text="This project was made in conjunction with maven. This was done in order to use external packages in the attempt to improve both the stability and user experience of the program. The formulas used in order to calculate the orbits are approximations using Euler’s formulas. Simply put, the formulas calculate the orbit by using the values given by the user and using the physics kinematic formulas to calculate the next position where the difference in time is very small. Doing this calculation multiple times gives a good approximation. The approximation can improve by decreasing this “difference in time.”" wrappingWidth="423.36328125" BorderPane.alignment="CENTER">
         <BorderPane.margin>
            <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
         </BorderPane.margin>
      </Text>
   </center>
</BorderPane>
